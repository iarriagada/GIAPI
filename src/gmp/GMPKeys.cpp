#include "GMPKeys.h"

namespace gmp {
const std::string GMPKeys::GMP_PREFIX = "GMP";
const std::string GMPKeys::GMP_SEPARATOR = ".";
const std::string GMPKeys::GMP_SEQUENCE_COMMAND_PREFIX = GMP_PREFIX
		+ GMP_SEPARATOR + "SC" + GMP_SEPARATOR;

const std::string GMPKeys::GMP_COMPLETION_INFO = GMP_PREFIX + GMP_SEPARATOR + "COMPLETION_INFO";


const std::string GMPKeys::GMP_ACTIVITY_PROP = "GMP_ACTIVITY_PROP";
const std::string GMPKeys::GMP_ACTIONID_PROP = "GMP_ACTIONID";

const std::string GMPKeys::GMP_ACTIVITY_PRESET = "PRESET";
const std::string GMPKeys::GMP_ACTIVITY_START = "START";
const std::string GMPKeys::GMP_ACTIVITY_PRESET_START = "PRESET/START";
const std::string GMPKeys::GMP_ACTIVITY_CANCEL = "CANCEL";

const std::string GMPKeys::GMP_HANDLER_RESPONSE_ACCEPTED = "ACCEPTED";
const std::string GMPKeys::GMP_HANDLER_RESPONSE_STARTED = "STARTED";
const std::string GMPKeys::GMP_HANDLER_RESPONSE_COMPLETED = "COMPLETED";
const std::string GMPKeys::GMP_HANDLER_RESPONSE_ERROR = "ERROR";

const std::string GMPKeys::GMP_HANDLER_RESPONSE_KEY = "GMP_HANDLER_RESPONSE";
const std::string GMPKeys::GMP_HANDLER_RESPONSE_ERROR_KEY =
		"GMP_HANDLER_RESPONSE_ERROR";

const std::string GMPKeys::GMP_SEQUENCE_COMMAND_TEST = GMP_SEQUENCE_COMMAND_PREFIX + "TEST" ;
const std::string GMPKeys::GMP_SEQUENCE_COMMAND_REBOOT = GMP_SEQUENCE_COMMAND_PREFIX + "REBOOT";
const std::string GMPKeys::GMP_SEQUENCE_COMMAND_INIT = GMP_SEQUENCE_COMMAND_PREFIX + "INIT";
const std::string GMPKeys::GMP_SEQUENCE_COMMAND_DATUM = GMP_SEQUENCE_COMMAND_PREFIX + "DATUM";
const std::string GMPKeys::GMP_SEQUENCE_COMMAND_PARK = GMP_SEQUENCE_COMMAND_PREFIX + "PARK";
const std::string GMPKeys::GMP_SEQUENCE_COMMAND_VERIFY = GMP_SEQUENCE_COMMAND_PREFIX + "VERIFY";
const std::string GMPKeys::GMP_SEQUENCE_COMMAND_END_VERIFY = GMP_SEQUENCE_COMMAND_PREFIX + "END_VERIFY";
const std::string GMPKeys::GMP_SEQUENCE_COMMAND_GUIDE = GMP_SEQUENCE_COMMAND_PREFIX + "GUIDE";
const std::string GMPKeys::GMP_SEQUENCE_COMMAND_END_GUIDE = GMP_SEQUENCE_COMMAND_PREFIX + "END_GUIDE";
const std::string GMPKeys::GMP_SEQUENCE_COMMAND_APPLY = GMP_SEQUENCE_COMMAND_PREFIX + "APPLY";
const std::string GMPKeys::GMP_SEQUENCE_COMMAND_OBSERVE = GMP_SEQUENCE_COMMAND_PREFIX + "OBSERVE";
const std::string GMPKeys::GMP_SEQUENCE_COMMAND_END_OBSERVE = GMP_SEQUENCE_COMMAND_PREFIX + "END_OBSERVE";
const std::string GMPKeys::GMP_SEQUENCE_COMMAND_PAUSE = GMP_SEQUENCE_COMMAND_PREFIX + "PAUSE";
const std::string GMPKeys::GMP_SEQUENCE_COMMAND_CONTINUE = GMP_SEQUENCE_COMMAND_PREFIX + "CONTINUE";
const std::string GMPKeys::GMP_SEQUENCE_COMMAND_STOP = GMP_SEQUENCE_COMMAND_PREFIX + "STOP";
const std::string GMPKeys::GMP_SEQUENCE_COMMAND_STOP_CYCLE = GMP_SEQUENCE_COMMAND_PREFIX + "STOP_CYCLE";
const std::string GMPKeys::GMP_SEQUENCE_COMMAND_ABORT = GMP_SEQUENCE_COMMAND_PREFIX + "ABORT";
const std::string GMPKeys::GMP_SEQUENCE_COMMAND_ENGINEERING = GMP_SEQUENCE_COMMAND_PREFIX + "ENGINEERING";

const std::string GMPKeys::GMP_UTIL_REQUEST_DESTINATION = GMP_PREFIX + GMP_SEPARATOR + "UTIL_REQUEST_DESTINATION";
const std::string GMPKeys::GMP_UTIL_REQUEST_TYPE = "REQUEST_TYPE";
const int GMPKeys::GMP_UTIL_REQUEST_PROPERTY = 0;
const std::string GMPKeys::GMP_UTIL_PROPERTY = "PROPERTY";

const std::string GMPKeys::GMP_SERVICES_LOG_DESTINATION = GMP_PREFIX + GMP_SEPARATOR + "LOGGING_DESTINATION";
const std::string GMPKeys::GMP_SERVICES_LOG_LEVEL = "LEVEL";

const std::string GMPKeys::GMP_STATUS_DESTINATION_PREFIX = GMP_PREFIX + GMP_SEPARATOR + "STATUS" + GMP_SEPARATOR;

const std::string GMPKeys::GMP_GEMINI_EPICS_REQUEST_DESTINATION = GMP_PREFIX + GMP_SEPARATOR + "EPICS_REQUEST_DESTINATION";
const std::string GMPKeys::GMP_GEMINI_EPICS_CHANNEL_PROPERTY = "EPICS_CHANNEL";
const std::string GMPKeys::GMP_EPICS_TOPIC_PREFIX = GMP_PREFIX + GMP_SEPARATOR + "EPICS" + GMP_SEPARATOR;

const std::string GMPKeys::GMP_PCS_UPDATE_DESTINATION = GMP_PREFIX + GMP_SEPARATOR + "PCS_UPDATE_DESTINATION";

const std::string GMPKeys::GMP_TCS_CONTEXT_DESTINATION = GMP_PREFIX + GMP_SEPARATOR + "TCS_CONTEXT_DESTINATION";

const std::string GMPKeys::GMP_GEMINI_EPICS_GET_DESTINATION = GMP_PREFIX + GMP_SEPARATOR + "EPICS_GET_DESTINATION";

const std::string GMPKeys::GMP_DATA_OBSEVENT_DESTINATION = GMP_PREFIX + GMP_SEPARATOR + "OBSEVENT_DESTINATION";
const std::string GMPKeys::GMP_DATA_OBSEVENT_NAME = "OBSEVENT_NAME";
const std::string GMPKeys::GMP_DATA_OBSEVENT_FILENAME = "OBSEVENT_FILENAME";
const std::string GMPKeys::GMP_DATA_FILEEVENT_DESTINATION = GMP_PREFIX + GMP_SEPARATOR + "FILEEVENT_DESTINATION";
const std::string GMPKeys::GMP_DATA_FILEEVENT_TYPE = "TYPE";
const std::string GMPKeys::GMP_DATA_FILEEVENT_FILENAME = "FILENAME";
const std::string GMPKeys::GMP_DATA_FILEEVENT_DATALABEL = "DATALABEL";
const std::string GMPKeys::GMP_DATA_FILEEVENT_HINT = "HINT";

GMPKeys::GMPKeys() {
}

GMPKeys::~GMPKeys() {
}

}
